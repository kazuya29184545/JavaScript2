<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width">
        <title>Kazuya Goto</title>
        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

        <!-- Don't use this in production: -->
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
        <link rel="stylesheet" href="../public/style.css">
    </head>

    <body>
        <div id="root"></div>
        <script type="text/babel">
            const Items = (props) => {
                console.log(props);
                const listItems = props.data.map((item) => {
                    return <li key={item._id} id={item._id} onClick={props.clickHandler}>
                        {item.name}
                    </li>
                });
                return <div className="container"><ul>{listItems}</ul></div>
            }
            const ItemDetail = (props) => {
                return <div>Detail<hr/>
                    <form>
                        Name: <input type="text" name="name" onChange={props.onChange} value={props.item.name || ""} /><br/>
                        Year: <input type="text" name="year" onChange={props.onChange} value={props.item.year || ""} /><br/>
                        Director: <input type="text" name="name" onChange={props.onChange} value={props.item.director || ""} /><br/>
                        Genre: <input type="text" name="name" onChange={props.onChange} value={props.item.genre || ""} />
                        <button name="clear" onClick={props.clearField}>Clear</button>
                    </form>
                </div>
            }

            class App extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                items: "<%- movies %>",
                currentItem: {}
            };
        }
        showDetail = (event) => {
            // console.log(event.target);
            // console.log(event.target.innerText);
            // console.log(event.target.id);
            let name = event.target.innerText;
            let newItem = this.state.items.find((item) => item.name == name);
            this.setState({"currentItem": newItem})
        }
        fieldChanged = (event) => {
            let newItem = this.state.currentItem;
            console.log(event.target.value);
            newItem[event. target.name] = event.target.value;
            this.setState({currentItem: newItem})
        }
        clearField = () => {
            this.setState({currentItem: {}})
        }
        render() {
            return (
                <div>
                    <h2>Inventory</h2>
                    <Items data={this.state.items} clickHandler={this.showDetail} />
                    <ItemDetail
                        item={this.state.currentItem}
                        onChange = {this.fieldChanged}
                    />
                </div>
            );
        }
    }


            ReactDOM.render(
                // <App />, document.getElementById('DOM')
                <div><Movies  data={movies} clickHandler={showDetail} /></div>,
                document.getElementById('DOM')
            );
        </script>
    </body>
</html>
